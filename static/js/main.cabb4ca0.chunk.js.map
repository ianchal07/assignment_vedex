{"version":3,"sources":["components/customer/Details.jsx","App.js","index.js"],"names":["dateConvert","dateString","dateParts","split","Date","Showdetails","useState","items","setItems","initName","setSearchName","target","setTarget","isFiltered","setfilter","filterList","setfilterList","dateList","setDateList","isSorted","setSorted","filtercount","srtFreq","sortBydate","List","sort","a","b","date","reverse","filterBy","resultList","status","localeCompare","handleSubmit","e","preventDefault","fetch","then","res","json","length","name","toString","toLowerCase","obj","cnt","i","targetname","customer","k","j","count","className","method","onSubmit","id","type","placeholder","onChange","value","map","details","order_id","country","address","product_title","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAGA,SAASA,EAAYC,GACjB,IAAIC,EAAYD,EAAWE,MAAM,KAIrC,OADiB,IAAIC,MAAMF,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAyQvDG,MArQf,WAMI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAgCN,mBAAS,GAAzC,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAA8BZ,mBAAS,GAAvC,mBAAOa,EAAP,KAAiBC,EAAjB,KACIC,EAAY,EAEZC,EAAQ,EAGNC,EAAa,WACf,IAAIC,EAAKjB,EAGNe,EAAQ,IAAI,EACXE,EAAKC,MAAK,SAAUC,EAAGC,GAEnB,OAAQ3B,EAAY0B,EAAEE,MAAM5B,EAAY2B,EAAEC,UAI1CJ,EAAKC,MAAK,SAAUC,EAAGC,GACnB,OAAQ3B,EAAY0B,EAAEE,MAAM5B,EAAY2B,EAAEC,SAE9CJ,EAAKK,WAEbX,EAAYM,GACZJ,EAAU,GACVE,KAEEQ,EAAW,WACb,IAAIC,EAAaxB,EACbc,EAAc,IAAM,EACpBU,EAAWN,MAAK,SAAUC,EAAGC,GACzB,OAAOD,EAAEM,OAAOC,cAAcN,EAAEK,YAKpCD,EAAWN,MAAK,SAAUC,EAAGC,GACzB,OAAOD,EAAEM,OAAOC,cAAcN,EAAEK,WAEpCD,EAAWF,WAEfR,IACAL,EAAce,GACdjB,EAAUO,IAGRa,EAAe,SAACC,GAClBA,EAAEC,iBACFxB,EAAUH,IAMd,GAJA4B,MACI,+DACCC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAAWhC,EAASgC,MAC3B7B,EAAO8B,OAAS,EAAG,CAKnB,IAJA,IAAIC,EAAO/B,EAAOgC,WAAWC,cAEzBC,EAAM,CAAC,IACPC,EAAM,EACDC,EAAI,EAAGA,EAAIxC,EAAMkC,OAAQM,IAAK,CAInC,IAHA,IAAIC,EAAazC,EAAMwC,GAAGE,SAASN,WAAWC,cAC1CM,EAAI,EAAGC,EAAI,EACXC,EAAQ,EACLF,EAAIR,EAAKD,QAAUU,EAAIH,EAAWP,QAAQ,CAC7C,GAAIC,EAAKQ,KAAOF,EAAWG,GAKtB,CACDC,EAAQ,EACR,MANAF,IACAC,IACAC,IAOJA,EAAQ,IACRP,EAAIC,KAASvC,EAAMwC,IAI3B,OAAQ,mCACJ,sBAAKM,UAAU,UAAf,UACI,qBAAIA,UAAU,SAAd,wBAAkC,uBAAMA,UAAU,SAAhB,cAA2B9C,EAAMkC,aACnE,qBAAKY,UAAU,YAAf,SACI,uBAAMC,OAAO,OAAOC,SAAUrB,EAA9B,UACI,uBAAOsB,GAAG,aAAaC,KAAK,OAAOC,YAAY,cAAcC,SAAU,SAAAxB,GAAC,OAAIzB,EAAcyB,EAAExB,OAAOiD,UACnG,wBAAQP,UAAU,UAAUI,KAAK,SAAjC,yBAGR,wBAAOJ,UAAU,eAAjB,UACI,sCAAQ,+BACJ,0CACA,0CACA,yCACA,yCACA,0CACA,4CAAc,wBAAQA,UAAU,UAAlB,wBACd,+BAAI,wBAAQA,UAAU,UAAlB,uBAAJ,kBAGJ,gCAEQR,EAAIgB,KAAI,SAACC,GAAD,OACJ,+BACI,6BAAKA,EAAQC,WACb,6BAAKD,EAAQb,WACb,6BAAKa,EAAQE,UACb,mCAAMF,EAAQG,WACd,6BAAKH,EAAQI,gBACb,6BAAKJ,EAAQlC,OACb,mCAAM,uBAAMyB,UAAWS,EAAQ9B,OAAzB,cAAmC8B,EAAQ9B,6BAU/E,OAAInB,EAGM,mCACJ,sBAAKwC,UAAU,UAAf,UACI,qBAAIA,UAAU,SAAd,wBAAkC,uBAAMA,UAAU,SAAhB,cAA2B9C,EAAMkC,aACnE,qBAAKY,UAAU,YAAf,SACI,uBAAMC,OAAO,OAAOC,SAAUrB,EAA9B,UACI,uBAAOsB,GAAG,aAAaC,KAAK,OAAOC,YAAY,cAAcC,SAAU,SAAAxB,GAAC,OAAIzB,EAAcyB,EAAExB,OAAOiD,UACnG,wBAAQP,UAAU,UAAUI,KAAK,SAAjC,yBAGR,wBAAOJ,UAAU,eAAjB,UACI,sCAAQ,+BACJ,0CACA,0CACA,yCACA,yCACA,0CACA,4CAAc,wBAAQA,UAAU,UAAUc,QAAS5C,EAArC,wBACd,+BAAI,wBAAQ8B,UAAU,UAAUc,QAASrC,EAArC,uBAAJ,kBAGJ,gCAEQf,EAAW8C,KAAI,SAACC,GAAD,OACX,+BACI,6BAAKA,EAAQC,WACb,6BAAKD,EAAQb,WACb,6BAAKa,EAAQE,UACb,mCAAMF,EAAQG,WACd,6BAAKH,EAAQI,gBACb,6BAAKJ,EAAQlC,OACb,mCAAM,uBAAMyB,UAAWS,EAAQ9B,OAAzB,cAAmC8B,EAAQ9B,6BAWhE,IAAXb,EAGM,mCACJ,sBAAKkC,UAAU,UAAf,UACI,qBAAIA,UAAU,SAAd,wBAAkC,uBAAMA,UAAU,SAAhB,cAA2B9C,EAAMkC,aACnE,qBAAKY,UAAU,YAAf,SACI,uBAAMC,OAAO,OAAOC,SAAUrB,EAA9B,UACI,uBAAOsB,GAAG,aAAaC,KAAK,OAAOC,YAAY,cAAcC,SAAU,SAAAxB,GAAC,OAAIzB,EAAcyB,EAAExB,OAAOiD,UACnG,wBAAQP,UAAU,UAAUI,KAAK,SAAjC,yBAGR,wBAAOJ,UAAU,eAAjB,UACI,sCAAQ,+BACJ,0CACA,0CACA,yCACA,yCACA,0CACA,4CAAc,wBAAQA,UAAU,UAAUc,QAAS5C,EAArC,wBACd,+BAAI,wBAAQ8B,UAAU,UAAUc,QAASrC,EAArC,uBAAJ,kBAGJ,gCAEQb,EAAS4C,KAAI,SAACC,GAAD,OACT,+BACI,6BAAKA,EAAQC,WACb,6BAAKD,EAAQb,WACb,6BAAKa,EAAQE,UACb,mCAAMF,EAAQG,WACd,6BAAKH,EAAQI,gBACb,6BAAKJ,EAAQlC,OACb,mCAAM,uBAAMyB,UAAWS,EAAQ9B,OAAzB,cAAmC8B,EAAQ9B,6BAYrE,mCACJ,sBAAKqB,UAAU,UAAf,UACI,qBAAIA,UAAU,SAAd,wBAAkC,uBAAMA,UAAU,SAAhB,cAA2B9C,EAAMkC,aACnE,qBAAKY,UAAU,YAAf,SACI,uBAAMC,OAAO,OAAOC,SAAUrB,EAA9B,UACI,uBAAOsB,GAAG,aAAaC,KAAK,OAAOC,YAAY,cAAcC,SAAU,SAAAxB,GAAC,OAAIzB,EAAcyB,EAAExB,OAAOiD,UACnG,wBAAQP,UAAU,UAAUI,KAAK,SAAjC,yBAGR,wBAAOJ,UAAU,eAAjB,UACI,sCAAQ,+BACJ,0CACA,0CACA,yCACA,yCACA,0CACA,4CAAc,wBAAQA,UAAU,UAAUc,QAAS5C,EAArC,wBACd,+BAAI,wBAAQ8B,UAAU,UAAUc,QAASrC,EAArC,uBAAJ,kBAGJ,gCAEQvB,EAAMsD,KAAI,SAACC,GAAD,OACN,+BACI,6BAAKA,EAAQC,WACb,6BAAKD,EAAQb,WACb,6BAAKa,EAAQE,UACb,mCAAMF,EAAQG,WACd,6BAAKH,EAAQI,gBACb,6BAAKJ,EAAQlC,OACb,mCAAM,uBAAMyB,UAAWS,EAAQ9B,OAAzB,cAAmC8B,EAAQ9B,8B,MChQtE,SAASoC,IAEtB,OAAQ,qBACFf,UAAU,MADR,SAGV,cAAC,EAAD,MCJAgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.cabb4ca0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction dateConvert(dateString){\r\n    var dateParts = dateString.split(\"/\");\r\n\r\n// month is 0-based, that's why we need dataParts[1] - 1\r\nvar dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\nreturn dateObject\r\n}\r\n\r\nfunction Showdetails() {\r\n\r\n    // Constructor \r\n\r\n\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [initName, setSearchName] = useState('');\r\n    const [target, setTarget] = useState('');\r\n    const [isFiltered, setfilter] = useState(0);\r\n    const [filterList, setfilterList] = useState([]);\r\n    const [dateList, setDateList] = useState([]);\r\n    const [isSorted, setSorted] = useState(0);\r\n    let filtercount=0;\r\n    \r\n    let srtFreq=0;\r\n\r\n\r\n    const sortBydate = () => {\r\n        var List=items;\r\n        \r\n        \r\n        if(srtFreq%2===0){\r\n            List.sort(function (a, b) {\r\n                \r\n                return (dateConvert(a.date)-dateConvert(b.date));\r\n            });\r\n        }\r\n        else{\r\n                List.sort(function (a, b) {\r\n                    return (dateConvert(a.date)-dateConvert(b.date));\r\n                });\r\n                List.reverse();\r\n        }\r\n        setDateList(List);\r\n        setSorted(1);\r\n        srtFreq++;\r\n    }\r\n    const filterBy = () => {\r\n        var resultList = items;\r\n        if (filtercount % 2 === 0) {\r\n            resultList.sort(function (a, b) {\r\n                return a.status.localeCompare(b.status);\r\n            });\r\n\r\n        }\r\n        else {\r\n            resultList.sort(function (a, b) {\r\n                return a.status.localeCompare(b.status);\r\n            });\r\n            resultList.reverse();\r\n        }\r\n        filtercount++;\r\n        setfilterList(resultList);\r\n        setfilter(filtercount);\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setTarget(initName);\r\n    }\r\n    fetch(\r\n        \"https://my-json-server.typicode.com/Ved-X/assignment/orders\")\r\n        .then((res) => res.json())\r\n        .then((json) => { setItems(json) });\r\n    if (target.length > 0) {\r\n        let name = target.toString().toLowerCase();\r\n\r\n        var obj = [{}];\r\n        var cnt = 0;\r\n        for (var i = 0; i < items.length; i++) {\r\n            let targetname = items[i].customer.toString().toLowerCase();\r\n            var k = 0, j = 0;\r\n            var count = 0;\r\n            while (k < name.length && j < targetname.length) {\r\n                if (name[k] === targetname[j]) {\r\n                    k++;\r\n                    j++;\r\n                    count++;\r\n                }\r\n                else {\r\n                    count = 0;\r\n                    break;\r\n                }\r\n            }\r\n            if (count > 0) {\r\n                obj[cnt++] = items[i];\r\n            }\r\n\r\n        }\r\n        return (<>\r\n            <div className=\"details\">\r\n                <h1 className=\"allord\">All orders <span className=\"allord\"> {items.length}</span></h1>\r\n                <div className=\"container\">\r\n                    <form method=\"post\" onSubmit={handleSubmit}>\r\n                        <input id=\"form-input\" type=\"text\" placeholder=\"search name\" onChange={e => setSearchName(e.target.value)} />\r\n                        <button className=\"buttons\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n                <table className=\"styled-table\">\r\n                    <thead> <tr>\r\n                        <th>ORDER ID</th>\r\n                        <th>CUSTOMER</th>\r\n                        <th>COUNTRY</th>\r\n                        <th>ADDRESS</th>\r\n                        <th>PRODUCT </th>\r\n                        <th>Date Order<button className=\"buttons\"  >sort by</button></th>\r\n                        <th><button className=\"buttons\"  >filter by</button>STATUS</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            obj.map((details) => (\r\n                                <tr>\r\n                                    <td>{details.order_id}</td>\r\n                                    <td>{details.customer}</td>\r\n                                    <td>{details.country}</td>\r\n                                    <td> {details.address}</td>\r\n                                    <td>{details.product_title}</td>\r\n                                    <td>{details.date}</td>\r\n                                    <td > <span className={details.status}> {details.status}</span></td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n        );\r\n    }\r\nelse  if (isFiltered) {\r\n\r\n        // console.log(isFiltered === 1);\r\n        return (<>\r\n            <div className=\"details\">\r\n                <h1 className=\"allord\">All orders <span className=\"allord\"> {items.length}</span></h1>\r\n                <div className=\"container\">\r\n                    <form method=\"post\" onSubmit={handleSubmit}>\r\n                        <input id=\"form-input\" type=\"name\" placeholder=\"search name\" onChange={e => setSearchName(e.target.value)} />\r\n                        <button className=\"buttons\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n                <table className=\"styled-table\">\r\n                    <thead> <tr>\r\n                        <th>ORDER ID</th>\r\n                        <th>CUSTOMER</th>\r\n                        <th>COUNTRY</th>\r\n                        <th>ADDRESS</th>\r\n                        <th>PRODUCT </th>\r\n                        <th>Date Order<button className=\"buttons\" onClick={sortBydate} >sort by</button></th>\r\n                        <th><button className=\"buttons\" onClick={filterBy} >filter by</button>STATUS</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            filterList.map((details) => (\r\n                                <tr>\r\n                                    <td>{details.order_id}</td>\r\n                                    <td>{details.customer}</td>\r\n                                    <td>{details.country}</td>\r\n                                    <td> {details.address}</td>\r\n                                    <td>{details.product_title}</td>\r\n                                    <td>{details.date}</td>\r\n                                    <td > <span className={details.status}> {details.status}</span></td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n        );\r\n\r\n    }\r\nelse  if (isSorted===1) {\r\n\r\n        // console.log(isFiltered === 1);\r\n        return (<>\r\n            <div className=\"details\">\r\n                <h1 className=\"allord\">All orders <span className=\"allord\"> {items.length}</span></h1>\r\n                <div className=\"container\">\r\n                    <form method=\"post\" onSubmit={handleSubmit}>\r\n                        <input id=\"form-input\" type=\"name\" placeholder=\"search name\" onChange={e => setSearchName(e.target.value)} />\r\n                        <button className=\"buttons\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n                <table className=\"styled-table\">\r\n                    <thead> <tr>\r\n                        <th>ORDER ID</th>\r\n                        <th>CUSTOMER</th>\r\n                        <th>COUNTRY</th>\r\n                        <th>ADDRESS</th>\r\n                        <th>PRODUCT </th>\r\n                        <th>Date Order<button className=\"buttons\" onClick={sortBydate} >sort by</button></th>\r\n                        <th><button className=\"buttons\" onClick={filterBy} >filter by</button>STATUS</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            dateList.map((details) => (\r\n                                <tr>\r\n                                    <td>{details.order_id}</td>\r\n                                    <td>{details.customer}</td>\r\n                                    <td>{details.country}</td>\r\n                                    <td> {details.address}</td>\r\n                                    <td>{details.product_title}</td>\r\n                                    <td>{details.date}</td>\r\n                                    <td > <span className={details.status}> {details.status}</span></td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n    else\r\n        return (<>\r\n            <div className=\"details\">\r\n                <h1 className=\"allord\">All orders <span className=\"allord\"> {items.length}</span></h1>\r\n                <div className=\"container\">\r\n                    <form method=\"post\" onSubmit={handleSubmit}>\r\n                        <input id=\"form-input\" type=\"name\" placeholder=\"search name\" onChange={e => setSearchName(e.target.value)} />\r\n                        <button className=\"buttons\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n                <table className=\"styled-table\">\r\n                    <thead> <tr>\r\n                        <th>ORDER ID</th>\r\n                        <th>CUSTOMER</th>\r\n                        <th>COUNTRY</th>\r\n                        <th>ADDRESS</th>\r\n                        <th>PRODUCT </th>\r\n                        <th>Date Order<button className=\"buttons\" onClick={sortBydate} >sort by</button></th>\r\n                        <th><button className=\"buttons\" onClick={filterBy} >filter by</button>STATUS</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            items.map((details) => (\r\n                                <tr>\r\n                                    <td>{details.order_id}</td>\r\n                                    <td>{details.customer}</td>\r\n                                    <td>{details.country}</td>\r\n                                    <td> {details.address}</td>\r\n                                    <td>{details.product_title}</td>\r\n                                    <td>{details.date}</td>\r\n                                    <td > <span className={details.status}> {details.status}</span></td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n        );\r\n}\r\n\r\n\r\nexport default Showdetails;","\r\nimport Showdetails from \"./components/customer/Details\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  \r\n  return (<\r\n    div className=\"App\" >\r\n  \r\n<Showdetails></Showdetails>\r\n\r\n     </div >\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}