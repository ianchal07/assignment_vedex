{"version":3,"sources":["components/customer/Details.jsx","App.js","index.js"],"names":["Showdetails","useState","items","setItems","initName","setSearchName","target","setTarget","isFiltered","setfilter","handleSubmit","e","preventDefault","fetch","then","res","json","length","name","toString","toLowerCase","obj","cnt","i","targetname","customer","k","j","count","className","method","onSubmit","id","type","placeholder","onChange","value","map","details","order_id","country","address","product_title","date","status","onClick","resultList","sort","a","b","localeCompare","reverse","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69e88eda.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Showdetails() {\r\n\r\n    // Constructor \r\n\r\n\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [initName, setSearchName] = useState('');\r\n    const [target, setTarget] = useState('');\r\n    const [isFiltered,setfilter]=useState(0);\r\n\r\n   let isSorted = 0;\r\n    \r\n    const sortBydate = () => {\r\n        // resultList.sortBy(function(o){ return new Date( o.date ) });\r\n\r\n        \r\n    }\r\n    const filterBy = () => {\r\n       var resultList=items;\r\n        if (isFiltered === 0) {\r\n            resultList.sort(function (a, b) {\r\n                // Turn your strings into dates, and then subtract them\r\n                // to get a value that is either negative, positive, or zero.\r\n                return a.status.localeCompare(b.status);\r\n            });\r\n        }\r\n        else {\r\n            resultList.reverse();\r\n        }\r\n        setfilter(1);\r\n        setItems(resultList);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setTarget(initName);\r\n    }\r\n    fetch(\r\n        \"https://my-json-server.typicode.com/Ved-X/assignment/orders\")\r\n        .then((res) => res.json())\r\n        .then((json) => { setItems(json) });\r\n    if (target.length > 0) {\r\n        let name = target.toString().toLowerCase();\r\n\r\n        var obj = [{}];\r\n        var cnt = 0;\r\n        for (var i = 0; i < items.length; i++) {\r\n            let targetname = items[i].customer.toString().toLowerCase();\r\n            var k = 0, j = 0;\r\n            var count = 0;\r\n            while (k < name.length && j < targetname.length) {\r\n                if (name[k] === targetname[j]) {\r\n                    k++;\r\n                    j++;\r\n                    count++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            if (count > 0) {\r\n                obj[cnt++] = items[i];\r\n            }\r\n\r\n        }\r\n        // if (isFiltered) {\r\n      \r\n        //     console.log(isFiltered === 1);\r\n        //     return (<>\r\n        //         <div className=\"details\">\r\n        //             <h1 className=\"allord\">All orders <span className=\"allord\"> {items.length}</span></h1>\r\n        //             <div className=\"container\">\r\n        //                 <form method=\"post\" onSubmit={handleSubmit}>\r\n        //                     <input id=\"form-input\" type=\"name\" placeholder=\"search name\" onChange={e => setSearchName(e.target.value)} />\r\n        //                     <button className=\"buttons\" type=\"submit\">Search</button>\r\n        //                 </form>\r\n        //             </div>\r\n        //             <table className=\"styled-table\">\r\n        //                 <thead> <tr>\r\n        //                     <th>ORDER ID</th>\r\n        //                     <th>CUSTOMER</th>\r\n        //                     <th>COUNTRY</th>\r\n        //                     <th>ADDRESS</th>\r\n        //                     <th>PRODUCT </th>\r\n        //                     <th>Date Order<button className=\"buttons\" onClick={sortBydate} >sort by</button></th>\r\n        //                     <th><button className=\"buttons\" onClick={filterBy} >filter by</button>STATUS</th>\r\n        //                 </tr>\r\n        //                 </thead>\r\n        //                 <tbody>\r\n        //                     {\r\n        //                         result.map((details) => (\r\n        //                             <tr>\r\n        //                                 <td>{details.order_id}</td>\r\n        //                                 <td>{details.customer}</td>\r\n        //                                 <td>{details.country}</td>\r\n        //                                 <td> {details.address}</td>\r\n        //                                 <td>{details.product_title}</td>\r\n        //                                 <td>{details.date}</td>\r\n        //                                 <td > <span className={details.status}> {details.status}</span></td>\r\n        //                             </tr>\r\n        //                         ))\r\n        //                     }\r\n        //                 </tbody>\r\n        //             </table>\r\n        //         </div>\r\n        //     </>\r\n        //     );\r\n\r\n        // }\r\n\r\n\r\n        return (<>\r\n            <div className=\"details\">\r\n                <h1 className=\"allord\">All orders <span className=\"allord\"> {items.length}</span></h1>\r\n                <div className=\"container\">\r\n                    <form method=\"post\" onSubmit={handleSubmit}>\r\n                        <input id=\"form-input\" type=\"text\" placeholder=\"search name\" onChange={e => setSearchName(e.target.value)} />\r\n                        <button className=\"buttons\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n                <table className=\"styled-table\">\r\n                    <thead> <tr>\r\n                        <th>ORDER ID</th>\r\n                        <th>CUSTOMER</th>\r\n                        <th>COUNTRY</th>\r\n                        <th>ADDRESS</th>\r\n                        <th>PRODUCT </th>\r\n                        <th>Date Order<button className=\"buttons\"  >sort by</button></th>\r\n                        <th><button className=\"buttons\"  >filter by</button>STATUS</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            obj.map((details) => (\r\n                                <tr>\r\n                                    <td>{details.order_id}</td>\r\n                                    <td>{details.customer}</td>\r\n                                    <td>{details.country}</td>\r\n                                    <td> {details.address}</td>\r\n                                    <td>{details.product_title}</td>\r\n                                    <td>{details.date}</td>\r\n                                    <td > <span className={details.status}> {details.status}</span></td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"details\">\r\n            <h1 className=\"allord\">All orders <span className=\"allord\"> {items.length}</span></h1>\r\n            <div className=\"container\">\r\n                <form method=\"post\" onSubmit={handleSubmit}>\r\n                    <input id=\"form-input\" type=\"name\" placeholder=\"search name\" onChange={e => setSearchName(e.target.value)} />\r\n                    <button className=\"buttons\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n            <table className=\"styled-table\">\r\n                <thead> <tr>\r\n                    <th>ORDER ID</th>\r\n                    <th>CUSTOMER</th>\r\n                    <th>COUNTRY</th>\r\n                    <th>ADDRESS</th>\r\n                    <th>PRODUCT </th>\r\n                    <th>Date Order<button className=\"buttons\" onClick={sortBydate} >sort by</button></th>\r\n                    <th><button className=\"buttons\" onClick={filterBy} >filter by</button>STATUS</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        items.map((details) => (\r\n                            <tr>\r\n                                <td>{details.order_id}</td>\r\n                                <td>{details.customer}</td>\r\n                                <td>{details.country}</td>\r\n                                <td> {details.address}</td>\r\n                                <td>{details.product_title}</td>\r\n                                <td>{details.date}</td>\r\n                                <td > <span className={details.status}> {details.status}</span></td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\n\r\nexport default Showdetails;","\r\nimport Showdetails from \"./components/customer/Details\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  \r\n  return (<\r\n    div className=\"App\" >\r\n  \r\n<Showdetails></Showdetails>\r\n\r\n     </div >\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}